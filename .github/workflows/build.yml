# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go 1.20
      uses: actions/setup-go@v2
      with:
        go-version: 1.20
      id: go

    - name: Test
      run: go test -v ./...

    - name: Build
      run: go build -v ./...
  
  build-linux-and-web:
    needs: [test-and-build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: ./build-all.sh

    - name: Upload linux build artifact
      id: upload_linux_artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-linux
        path: ./build/pong-linux

    - name: Upload web build artifact
      id: upload_web_artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-web-wasm
        path: ./build/pong-web-wasm.zip

  build-windows:
    needs: [test-and-build]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: ./build-all.sh

    - name: Upload windows build artifact
      id: upload_windows_artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-windows
        path: ./build/pong-windows.exe
        
    build-macos-intel:
      needs: [test-and-build]
      runs-on: macos-13
      steps:
        - uses: actions/checkout@v4
          
        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.20'
            
        - name: Build
          run: ./build-all.sh
          
        - name: Upload macos-intel build artifact
          id: upload_macos_intel_artifacts
          uses: actions/upload-artifact@v4
          with:
              name: build-macos-intel
              path: ./build/pong-macos-intel

  build-macos-apple-silicon:
    needs: [test-and-build]
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build
        run: ./build-all.sh

      - name: Upload macos-arm build artifact
        id: upload_macos_arm_artifacts
        uses: actions/upload-artifact@v4
        with:
            name: build-macos-apple-silicon
            path: ./build/pong-macos-apple-silicon

  release:
    needs: [build-linux, build-windows, build-macos-intel, build-macos-apple-silicon]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Delete old release
        id: delete_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh auth status
          gh release delete latest || true

      - name: Download pong-linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-linux
          path: ./build/
          merge-multiple: true

      - name: Download pong-web-wasm artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-web-wasm
          path: ./build/
          merge-multiple: true

      - name: Show all downloaded artifacts
        run: ls -R

      - name: Create new release
        id: create_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh auth status
          gh release create latest --title "Pong - latest" --notes "Find the latest release of pong that matches your platform"
          gh release upload latest ./build/pong-linux
          gh release upload latest ./build/pong-web-wasm.zip
          gh release view latest
          gh release edit latest --draft=false
