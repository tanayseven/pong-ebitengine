# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Test
      run: go test -v ./...

    - name: Build
      run: ./build-all.sh

    - name: Upload linux build artifact
      id: upload_linux_amd64_artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-linux-amd64
        path: ./build/pong-linux-amd64

    - name: Upload web build artifact
      id: upload_web_artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-web-wasm
        path: ./build/pong-web-wasm.zip

  release:
    needs: [build-linux]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Delete old release
        id: delete_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh auth status
          gh release delete latest || true

      - name: Download pong-linux-amd64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-linux-amd64
          path: ./build/
          merge-multiple: true

      - name: Download pong-web-wasm artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-web-wasm
          path: ./build/
          merge-multiple: true

      - name: Show all downloaded artifacts
        run: ls -R

      - name: Create new release
        id: create_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh auth status
          gh release create latest --title "Pong - latest" --notes "Find the latest release of pong that matches your platform"
          gh release upload latest ./build/pong-linux-amd64
          gh release upload latest ./build/pong-web-wasm.zip
          gh release view latest
          gh release edit latest --draft=false
